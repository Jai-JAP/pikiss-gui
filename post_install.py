#!/usr/bin/env python3

import os
import subprocess

"""
Create categories
"""
from_cat = os.path.normpath(os.getcwd() + os.sep + os.pardir) + os.path.join(os.sep, 'data', 'categories', '.')
to_cat = os.path.join(os.environ['MESON_INSTALL_PREFIX'], 'share', 'pikiss-gui') + os.sep
subprocess.call(['cp', '-R', from_cat, to_cat])


"""
Create PiKISS GUI menuentry
"""

menuentrypath = os.path.join(os.environ['MESON_INSTALL_PREFIX'], 'share', 'applications') + os.sep
execpath = os.path.join(os.environ['MESON_INSTALL_PREFIX'], 'bin', 'pikiss-gui')
iconpath = os.path.join(os.environ['MESON_INSTALL_PREFIX'], 'share', 'icons', 'pikiss-gui.png')

with open(menuentrypath + 'pikiss-gui.desktop', 'w') as f:
    print('[Desktop Entry]', file=f)
    print('Name=PiKISS GUI', file=f)
    print('GenericName=PiKISS', file=f)
    print('Comment=GTK frontend for PiKISS', file=f)
    print('Categories=Utility;', file=f)
    print('Exec=' + execpath, file=f)
    print('Icon=' + iconpath, file=f)
    print('Terminal=true', file=f)
    print('Type=Application', file=f)
    print('StartupNotify=true', file=f)
    
subprocess.call(['chmod', 'a+x', menuentrypath + 'pikiss-gui.desktop'])


"""
Import Apps
"""
script_path = os.path.join(os.environ['MESON_INSTALL_PREFIX'], 'share', 'pikiss-gui', 'getapps.sh')
print('Importing Apps...')
user = os.environ['SUDO_USER']
subprocess.call(['su', user, script_path])

print('\n\nImporting apps successful.')


"""
Create PiKISS GUI Sync menuentry
"""
with open(menuentrypath + 'pikiss-gui-sync.desktop', 'w') as f:
    print('[Desktop Entry]', file=f)
    print('Name=PiKISS GUI Sync', file=f)
    print('GenericName=PiKISS Sync ', file=f)
    print('Comment=Sync Apps with PiKISS', file=f)
    print('Categories=Utility;', file=f)
    print('Exec=' + script_path, file=f)
    print('Icon=' + iconpath, file=f)
    print('Terminal=true', file=f)
    print('Type=Application', file=f)
    print('StartupNotify=true', file=f)
    
subprocess.call(['chmod', 'a+x', menuentrypath + 'pikiss-gui-sync.desktop'])

print('For resyncing apps with PiKISS use menu launcher "PiKISS GUI Sync"')


"""
Creating uninstall.sh
"""
uninstallsh = os.path.normpath(os.getcwd() + os.sep + os.pardir) + os.sep + 'uninstall.sh'
datadir = os.path.join(os.environ['MESON_INSTALL_PREFIX'], 'share', 'pikiss-gui')
print('Creating uninstall script,)

with open(uninstallsh, 'w') as f:
    print('#!/bin/bash\n\n{', file=f)
    print('## PiKISS GUI Uninstall script autogenerated at install\n', file=f)
    print('sudo ninja uninstall', file=f)
    print('sudo rm ' + menuentrypath + 'pikiss-gui*.desktop ', file=f)
    print('sudo rm -rf ' + datadir, file=f)
    print('echo PiKISS directories successfully removed', file=f)
    print('sudo rm -f ' + uninstallsh + '\n}', file=f)

subprocess.call(['chmod', 'a+x', uninstallsh ])
