# This is the build file for project "pikiss-gui"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C object $out

rule vala_COMPILER
 command = valac $ARGS $in
 description = Compiling Vala source $in
 restat = 1

# Rules for linking.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/local/bin/meson --internal regenerate /home/pi/Development/pikiss-gui /home/pi/Development/pikiss-gui/build --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build pikiss-gui@exe/src/Application.c: vala_COMPILER ../src/Application.vala
 ARGS = -C --pkg libgnome-menu-3.0 --pkg gee-0.8 --pkg pango --pkg cairo --pkg gdk-3.0 --pkg gtk+-3.0 --target-glib 2.56.0 --pkg glib-2.0 --pkg gio-unix-2.0 --color=always --directory pikiss-gui@exe --basedir ../ --pkg=config --vapidir=/home/pi/Development/pikiss-gui/vapi --target-glib=2.38

build pikiss-gui@exe/meson-generated_src_Application.c.o: c_COMPILER pikiss-gui@exe/src/Application.c
 DEPFILE = pikiss-gui@exe/meson-generated_src_Application.c.o.d
 ARGS = -Ipikiss-gui@exe -I. -I.. -I/usr/include/gio-unix-2.0 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/uuid -I/usr/include/glib-2.0 -I/usr/lib/arm-linux-gnueabihf/glib-2.0/include -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/arm-linux-gnueabihf/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/libdrm -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/gee-0.8 -I/usr/include/gnome-menus-3.0 -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -w -O3 -pthread -DGMENU_I_KNOW_THIS_IS_UNSTABLE

build pikiss-gui: c_LINKER pikiss-gui@exe/meson-generated_src_Application.c.o | /usr/lib/arm-linux-gnueabihf/libm.a /lib/arm-linux-gnueabihf/libm-2.28.so /usr/lib/arm-linux-gnueabihf/libgio-2.0.so /usr/lib/arm-linux-gnueabihf/libgobject-2.0.so /usr/lib/arm-linux-gnueabihf/libglib-2.0.so /usr/lib/arm-linux-gnueabihf/libgtk-3.so /usr/lib/arm-linux-gnueabihf/libgdk-3.so /usr/lib/arm-linux-gnueabihf/libpangocairo-1.0.so /usr/lib/arm-linux-gnueabihf/libpango-1.0.so /usr/lib/arm-linux-gnueabihf/libatk-1.0.so /usr/lib/arm-linux-gnueabihf/libcairo-gobject.so /usr/lib/arm-linux-gnueabihf/libcairo.so /usr/lib/arm-linux-gnueabihf/libgdk_pixbuf-2.0.so /usr/lib/arm-linux-gnueabihf/libgee-0.8.so /usr/lib/arm-linux-gnueabihf/libgnome-menu-3.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group /usr/lib/arm-linux-gnueabihf/libgio-2.0.so /usr/lib/arm-linux-gnueabihf/libgobject-2.0.so /usr/lib/arm-linux-gnueabihf/libglib-2.0.so /usr/lib/arm-linux-gnueabihf/libgtk-3.so /usr/lib/arm-linux-gnueabihf/libgdk-3.so /usr/lib/arm-linux-gnueabihf/libpangocairo-1.0.so /usr/lib/arm-linux-gnueabihf/libpango-1.0.so /usr/lib/arm-linux-gnueabihf/libatk-1.0.so /usr/lib/arm-linux-gnueabihf/libcairo-gobject.so /usr/lib/arm-linux-gnueabihf/libcairo.so /usr/lib/arm-linux-gnueabihf/libgdk_pixbuf-2.0.so /usr/lib/arm-linux-gnueabihf/libgee-0.8.so /usr/lib/arm-linux-gnueabihf/libgnome-menu-3.so -lm -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/local/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/local/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/local/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/local/bin/meson dist
 pool = console

build dist: phony meson-dist

# Suffix

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/local/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony pikiss-gui

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build meson-private/coredata.dat: phony 

default all

